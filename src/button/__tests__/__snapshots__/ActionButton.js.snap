// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<withMaterialTheme(ActionButton) accent icon={<withMaterialTheme(Icon) name="more-vert" />} /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        false,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#FF4081",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) accent text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "#FF4081",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) accessibilityLabel="Button2" icon={<withMaterialTheme(Icon) name="more-vert" />} /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Button2"
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        false,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgba(255, 255, 255, 1)",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) accessibilityLabel="Button2" text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="Button2"
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) disabled icon={<withMaterialTheme(Icon) name="more-vert" />} /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="disabled"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        false,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgba(255, 255, 255, 0.5)",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) disabled text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="disabled"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 0.5)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) icon={<withMaterialTheme(Icon) name="more-vert" />} /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        false,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgba(255, 255, 255, 1)",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) icon={<withMaterialTheme(Icon) name="more-vert" />} narrow /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        Object {
          "width": 10,
        },
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgba(255, 255, 255, 1)",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) icon={<withMaterialTheme(Icon) name="more-vert" />} primary /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        false,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#3F51B5",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) icon={<withMaterialTheme(Icon) name="more-vert" />} tintColor="#123456" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="center"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        false,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={false}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "#123456",
          "fontSize": 24,
        },
        Array [
          undefined,
          undefined,
        ],
        Object {
          "fontFamily": "Material Icons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
      ]
    }
  >
    
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) onAccessibilityTap={function noRefCheck() {}} text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onAccessibilityTap={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) onLayout={function noRefCheck() {}} text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) onLongPress={function noRefCheck() {}} text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) onMagicTap={function noRefCheck() {}} text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onMagicTap={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) onPress={function noRefCheck() {}} text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) primary text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "#3F51B5",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) text="Button" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "rgba(255, 255, 255, 1)",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;

exports[`<withMaterialTheme(ActionButton) text="Button" tintColor="#123456" /> 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel={undefined}
  accessibilityTraits="button"
  accessible={true}
  hitSlop={undefined}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  rippleLocation="tapLocation"
  style={
    Array [
      Array [
        undefined,
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "paddingHorizontal": 16,
        },
        undefined,
      ],
      Object {
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
      },
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "fontFamily": "System",
          "fontSize": 14,
          "fontWeight": "500",
          "letterSpacing": 0.018,
          "lineHeight": 20,
          "textAlign": "center",
        },
        Object {
          "color": "#123456",
        },
      ]
    }
  >
    Button
  </Text>
  <View
    pointerEvents="none"
    style={
      Array [
        Object {
          "overflow": "hidden",
          "position": "absolute",
        },
        Object {
          "borderRadius": 0,
          "height": 1,
          "width": 1,
        },
      ]
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 1,
          "left": -0,
          "opacity": 0,
          "position": "absolute",
          "top": -0,
          "width": 1,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "#000000",
          "borderRadius": 0,
          "height": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "scale": 0,
            },
          ],
          "width": 0,
        }
      }
    />
  </View>
</View>
`;
